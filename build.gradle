plugins {
    id "java"
    id "idea"
    id "signing"
    id "ninja.miserable.blossom" version "1.0.1"
    id "com.github.johnrengelman.shadow" version "2.0.1"
    id "org.spongepowered.plugin" version "0.8.1"
    id 'com.qixalite.spongestart2' version '3.0.1'
}

group = "net.mohron.skyclaims"
version = "${major}.${minor}.${patch}-${api}-${suffix}"
description = "SkyClaims is an Island Management plugin that integrates with GriefPrevention."

if (System.getenv().BUILD_NUMBER != null) {
    version += "-${System.getenv().BUILD_NUMBER}"
}

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    jcenter()
    maven {
        name = "Sponge"
        url = "http://repo.spongepowered.org/maven"
    }
    maven {
        name = "Forge"
        url = "http://files.minecraftforge.net/maven"
    }
    maven {
        name = "Nucleus"
        url = "http://repo.drnaylor.co.uk/artifactory/list/minecraft"
    }
    maven {
        name "LuckPerms"
        url "https://repo.lucko.me/"
    }
}

dependencies {
    compile("org.spongepowered:spongeapi:${spongeapi}")
    compile("me.ryanhamshire:griefprevention:${griefprevention}:api")
    compile("io.github.nucleuspowered:nucleus-api:${nucleus}")
    runtimeOnly("me.ryanhamshire:griefprevention:${griefprevention}")
    //compile fileTree(dir: "libs", include: "*.jar")
}

shadowJar {
    dependencies {
        include(dependency("me.ryanhamshire:griefprevention:${griefprevention}:api"))
        include(dependency("io.github.nucleuspowered:nucleus-api:${nucleus}"))
    }
}

blossom {
    def pluginInfo = "src/main/java/net/mohron/skyclaims/PluginInfo.java"

    replaceToken "@NAME@", project.name, pluginInfo
    replaceToken "@VERSION@", project.version, pluginInfo
    replaceToken "@DESCRIPTION@", project.description, pluginInfo
}

spongestart {
    online 'false'
    minecraft "1.10.2"
    type "stable"
    spongeForge properties.spongeforge
    forgeServerFolder "run/API5/"
}

signing {
    required {Project.hasProperty("signing.keyId")}
    sign configurations.archives, configurations.shadow
}

build.dependsOn(shadowJar)